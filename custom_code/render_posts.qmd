---
title: "Render posts"
format: html
editor: 
  mode: source
---

# Set global options

```{r}
# set working directory 
# knitr::opts_knit$set(root.dir =  "..")

```

# Render posts

```{r function(s), eval=F}
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/




render_post <-
  function(site.path = ".",
           qmd.path = normalizePath("../_qmd"),
           file)
  {
  rlang::check_installed("knitr")
    
  ## Blog-specific directories.  This will depend on how you organize your blog.
  # site.path <- site.path # directory of jekyll blog (including trailing slash)
  fig.dir <- "assets/Rfig/" # directory to save figures
  # posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
  cache.path <- paste0(site.path, "_cache") # necessary for plots
  
  input <- file.path(qmd.path, file)
  # rmarkdown::render(input = input, output_dir = output_dir, output_file = output_file)
  
  rmd <- readLines(input)
  yaml <-
    c(
      "---",
      grep("^title:", rmd, value = TRUE),
      grep("^subtitle:", rmd, value = TRUE),
       grep("^date:", rmd, value = TRUE),
       grep("^tags:", rmd, value = TRUE), #tags
      "---"
    )
  
  date <- substr(yaml[3], start = 8, stop = 17)

  # render_markdown()
  output_file <- paste0(date, "-", gsub("Rmd$|qmd$", "md", file))
  output_dir <- file.path(normalizePath(site.path), "content/post")
  quarto::quarto_render(input = input, output_file = output_file, output_format = "md")
  
    
md <- readLines(file.path("../custom_code", output_file))

md2 <- c(yaml, md[4:length(md)])

writeLines(md2, file.path(output_dir, output_file))

# opts_knit$set(base.url = '/', base.dir = site.path)
  # opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F, 
  #                warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)   
  # # 
  # 
  # # setwd(site.path) # setwd to base
  # 
  # 
  # corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = file)))
  # 
  # #knitr!!
  #      out.file <- knit(as.character(file), 
  #                     output = as.character(corresponding.md.file),
  #                     envir = parent.frame(), 
  #                     quiet = T)
  #     message(paste0("KnitPost(): ", file))
  #     
  #     #fix heading to jekyll format
  #     #add layout post      
  #     x <- readLines(corresponding.md.file)
  #     x <- c(x[1], "layout: post", x[2:length(x)])
  #  
  #     #fix date format
  #     dl <- grep("date:", x)
  #     dln <- x[dl]
  # 
  #     dln <- gsub("date:","", dln)
  #           y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
  #           y <- gsub(" ","", y)
  #            m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
  #           m <- gsub(" ","", m)
  #           d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
  #           d <- gsub(" ","", d)
  # 
  #           dln <- paste(d, m, y, sep = "-")
  #           dln <- gsub('"',"", dln)
  #           dln <- gsub(' ',"", dln)
  #           x[dl] <- paste("date:", dln)    
  # 
  #           #remove output:
  #           x <- x[-grep("output:", x)]   
  #            
  #           #remove md_document:
  #           x <- x[-grep("md_document:", x)]   
  #           
  #           #remove variant: markdown_github
  #           x <- x[-grep("variant: markdown_github", x)]   
  #         
  #             #remove output:
  #           x <- x[-grep("author:", x)]   
  #           
  #     #put it together as a file         
  #     cat(x, file = corresponding.md.file, sep="\n")
  #     
  #     #change name to include date
  #    
  #     nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
  #     nn <- gsub('"',"", nn)
  #     #replace spaces with _
  #     nn <- gsub(" ","_", nn)
  #     
  #     file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))

      unlink(list.files(path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/", pattern = "\\.wav$"))      
      }


blogdown::stop_server(); blogdown::build_site(); blogdown::serve_site()

```

```{r, eval=F}
# 
# #Detecting_signals_with_monitoR
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Detecting_signals_with_monitoR.Rmd", categories = "cross-correlation, automatic detection", rm.output.text = F)
# 
# #dynamic spectros
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Create dynamic spectro in R.Rmd", categories = "spectrograms", rm.output.text = F)
# 
# #similarity with DTW
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Similarity of acoustic signals with dynamic time warping (DTW).Rmd", categories = "spectrograms", rm.output.text = F)
# 
# #download single rec species XC
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Download a single recording for each species in a site from Xeno-Canto.Rmd", categories = "querxc", rm.output.text = F)
# 
# #create pdf lspec
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Create pdf files with spectrograms of full recordings.Rmd", categories = "spectrograms", rm.output.text = F)
# 
# #compare methods
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Choosing the right method for measuring acoustic signal structure.Rmd", categories = "spectrograms", rm.output.text = F)
# 
# #catalog
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Creating song catalogs.Rmd", categories = "spectrograms", rm.output.text = F)
# 
# #scatter plot MEE
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Acoustic space scatter plot.Rmd", rm.output.text = F)
# 
# 
# # cut individual files
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Individual sound files for each selection.Rmd", rm.output.text = F)
# 
# 
# # updates on catalog
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Updates on catalog function.Rmd", rm.output.text = F)
# 
# 
# # seltailor
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Fixing selections manually.Rmd", rm.output.text = F)
# 
# 
# # Rraven
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Rraven: Connecting R and Raven Sound Analysis Software.Rmd", rm.output.text = F)
# 
# # Simulate songs
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
# 
# # Track harmonics
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
# 
# # Extended selection table
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Extended selection tables.Rmd", rm.output.text = F)

# Frequency detection
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Frequency range detection from spectrum.Rmd", rm.output.text = F)

# spectro-PCA
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Issues spectral parameters-PCA.Rmd", rm.output.text = F)

# custom contour DTW
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/custom contours for DTW.Rmd", rm.output.text = F)

# sel table vs templates XCORR
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Selection table vs template xcorr.Rmd", rm.output.text = F)

# phylo_spectro
# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/phylo_spectro function.Rmd", rm.output.text = F)

# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Working with songs.Rmd", rm.output.text = F)

# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/group signature xcorr.Rmd", rm.output.text = F)

# KnitPost(site.path = "~/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/barulho.Rmd", rm.output.text = F)

# KnitPost(site.path = "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/signal detection warbleR vs monitoR.Rmd", rm.output.text = F)

# KnitPost(site.path = "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Editing wave objects from extended selection tables.Rmd", rm.output.text = F)

KnitPost(file =  "dynaSpec_dynamic_spectrograms_in_r.Rmd", rm.output.text = F)

KnitPost(site.path = "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/", file =  "~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R/_Rmd/Automatic signal detection: a case study.Rmd", rm.output.text = F)

# source('~/Dropbox/R package testing/warbleR/Beta functions/random_sound.R')
random_sound(dur = 2, segment.dur.range = c(0.01, 0.9), frange = c(1, 2))


```

## unix code

```{r, eval = F}

#clone repository (you can change the git@... to clone any repository) 		
  git clone git@github.com:maRce10/marce10.github.com.git maRce10.github.com
  cd maRce10.github.com

#https://github.com/daattali/beautiful-jekyll  
# git clone  https://github.com/daattali/beautiful-jekyll
  
  git remote set-url origin git@github.com:maRce10/marce10.github.com.git
    git push origin master
#if that one does not work try git add. and commit as below

#run this
bundle install

#####once it is clone

#build it to look at it

# bundle exec jekyll serve
system("bundle exec jekyll serve")

# also try
gem update -- system
# if error "Could not locate Gemfile or .bundle/ directory" copy gemfile inside

#increase number of files than can be checked
sudo sysctl fs.inotify.max_user_watches=524288

#to post it
git add .  
git commit -m "group structure xcorr"
git push origin master

  #or
setwd("~/sda5/Dropbox/Websites/Blog/bioacoustics_in_R")
system("git add .")  
system('git commit -m "detection example 3"')
system("git push origin HEAD:master")
# git push https://github.com/maRce10/marce10.github.com



##adding markdown blog pages
# check thi:s
https://shiring.github.io/blogging/2016/12/04/diy_your_own_blog



###### additional code #######

#to find a string in files

grep -Ril "string here"
    
```
