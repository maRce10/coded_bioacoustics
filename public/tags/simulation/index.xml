<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>simulation on Coded bioacoustics</title>
    <link>marce10.github.io/coded_bioacustics/tags/simulation/</link>
    <description>Recent content in simulation on Coded bioacoustics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 22 Feb 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="marce10.github.io/coded_bioacustics/tags/simulation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simulating animal vocalizations</title>
      <link>marce10.github.io/coded_bioacustics/post/2018-02-22-simulating_animal_vocalizations/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate>
      <guid>marce10.github.io/coded_bioacustics/post/2018-02-22-simulating_animal_vocalizations/</guid>
      <description>⚠️ Dec-2023: Be aware that the functions sim_songs() has undergone substantial changes beginning with warbleR 1.1.30 so simulations using package versions may not look like those shown in this post. This post shows how to simulate animal vocalizations using the new warbleR function sim_songs. The function allows users to create song with several sub-units and harmonics, which are return as a wave object in the R environment. This can have several applications, from simulating song evolution to testing the efficacy of methods to measure acoustic structure for different signal types.</description>
    </item>
  </channel>
</rss>
